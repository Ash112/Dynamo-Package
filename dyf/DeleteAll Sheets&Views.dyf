<Workspace Version="1.3.2.2480" X="-243" Y="170" zoom="1" ScaleFactor="1" Name="DeleteAll Sheets&amp;Views" Description="Deletes All Sheets,Views, Schedules And Legends" ID="6dcf9347-4a63-4a07-9243-fcf9d84c5c78" Category="AKP Tools.General">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="510d1cb2-cadf-498d-8d1a-f860ba3ea50f" type="PythonNodeModels.PythonNode" nickname="Delete SH,VS,S" x="729.466491080518" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)
# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *
# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

delete = IN[0]

cantdelete=[]

coll = FilteredElementCollector(doc)

views = coll.OfClass(View).ToElements()

sheets = coll.OfClass(ViewSheet).ToElements()


viewelt = []
for i in views:
	viewelt.append(UnwrapElement(i).Id)
	
	
sheetselts = []
for i in sheets:
	sheetselts.append(UnwrapElement(i).Id)
		
	

# Start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)


if delete == True:

	cantdelete=[]
	for item in viewelt:
		try:
			doc.Delete(item)
		except:
			cantdelete.append(item)
		
		
	cantdelete=[]
	for item in sheetselts:
		try:
			doc.Delete(item)
		except:
			cantdelete.append(item)
			
else:

	null = 0
		

# End Transaction
TransactionManager.Instance.TransactionTaskDone()

doc.Regenerate()

OUT=cantdelete</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="76b8fc01-c4a3-4205-a665-a9794bdeb543" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="928.466491080518" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="NotDeleted" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="b0381883-27fc-4937-9dec-bb5865b38b06" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="474.5" y="-13" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Delete:bool=False" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="510d1cb2-cadf-498d-8d1a-f860ba3ea50f" start_index="0" end="76b8fc01-c4a3-4205-a665-a9794bdeb543" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b0381883-27fc-4937-9dec-bb5865b38b06" start_index="0" end="510d1cb2-cadf-498d-8d1a-f860ba3ea50f" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
</Workspace>